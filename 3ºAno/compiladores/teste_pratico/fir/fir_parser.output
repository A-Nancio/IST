Terminals unused in grammar

    tPUBLIC
    tPRIVATE
    tREQUIRE


State 65 conflicts: 1 shift/reduce
State 66 conflicts: 16 shift/reduce
State 67 conflicts: 1 shift/reduce
State 77 conflicts: 16 shift/reduce
State 79 conflicts: 16 shift/reduce
State 82 conflicts: 1 shift/reduce
State 95 conflicts: 16 shift/reduce
State 100 conflicts: 15 shift/reduce
State 104 conflicts: 15 shift/reduce
State 114 conflicts: 15 shift/reduce
State 115 conflicts: 15 shift/reduce


Grammar

    0 $accept: program $end

    1 program: decls

    2 decls: decl
    3      | decls decl

    4 decl: vardec ';'
    5     | fundef

    6 vardec: data_type '?' tIDENTIFIER
    7       | data_type tIDENTIFIER opt_initializer
    8       | data_type '*' tIDENTIFIER opt_initializer

    9 block: '{' decls instructions '}'
   10      | '{' instructions '}'
   11      | '{' decls '}'
   12      | '{' '}'
   13      | %empty

   14 fundef: data_type '*' tIDENTIFIER '(' ')' tARROW tINTEGER block block block

   15 instructions: instruction
   16             | instructions instruction

   17 instruction: expr ';'
   18            | tPRINT expr ';'
   19            | tPRINTLN expr ';'
   20            | tREAD lval ';'
   21            | tIF expr tTHEN instruction
   22            | tIF expr tTHEN instruction tELSE instruction
   23            | tWHILE expr tDO instruction tFINALLY instruction
   24            | tWHILE expr tDO instruction
   25            | tLEAVE ';'
   26            | tLEAVE tINTEGER ';'
   27            | tRESTART ';'
   28            | tRESTART tINTEGER ';'
   29            | block
   30            | tWITH ptr tAPPLY tIDENTIFIER tIN expr tSCALE expr ';'

   31 ptr: '<' data_type '>'

   32 data_type: tTYPE_STRING
   33          | tTYPE_INT

   34 opt_initializer: %empty
   35                | '=' expr

   36 expr: tINTEGER
   37     | string
   38     | '-' expr
   39     | '+' expr
   40     | expr '+' expr
   41     | expr '-' expr
   42     | expr '*' expr
   43     | expr '/' expr
   44     | expr '%' expr
   45     | expr '<' expr
   46     | expr '>' expr
   47     | expr tGE expr
   48     | expr tLE expr
   49     | expr tNE expr
   50     | expr tEQ expr
   51     | expr tAND expr
   52     | expr tOR expr
   53     | '(' expr ')'
   54     | lval
   55     | lval '=' expr

   56 string: tSTRING
   57       | string tSTRING

   58 lval: tIDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 44
    '(' (40) 14 53
    ')' (41) 14 53
    '*' (42) 8 14 42
    '+' (43) 39 40
    '-' (45) 38 41
    '/' (47) 43
    ';' (59) 4 17 18 19 20 25 26 27 28 30
    '<' (60) 31 45
    '=' (61) 35 55
    '>' (62) 31 46
    '?' (63) 6
    '{' (123) 9 10 11 12
    '}' (125) 9 10 11 12
    error (256)
    tINTEGER <i> (258) 14 26 28 36
    tIDENTIFIER <s> (259) 6 7 8 14 30 58
    tSTRING <s> (260) 56 57
    tIF (261) 21 22
    tTYPE_INT (262) 33
    tTYPE_STRING (263) 32
    tARROW (264) 14
    tREAD (265) 20
    tPRINT (266) 18
    tPRINTLN (267) 19
    tPUBLIC (268)
    tPRIVATE (269)
    tREQUIRE (270)
    tWHILE (271) 23 24
    tDO (272) 23 24
    tLEAVE (273) 25 26
    tRESTART (274) 27 28
    tAPPLY (275) 30
    tWITH (276) 30
    tSCALE (277) 30
    tIN (278) 30
    tIFX (279)
    tTHEN (280) 21 22
    tELSE (281) 22
    tEMPTY (282)
    tFINALLY (283) 23
    tOR (284) 52
    tAND (285) 51
    tEQ (286) 50
    tNE (287) 49
    tGE (288) 47
    tLE (289) 48
    tUNARY (290)


Nonterminals, with rules where they appear

    $accept (50)
        on left: 0
    program <node> (51)
        on left: 1
        on right: 0
    decls <sequence> (52)
        on left: 2 3
        on right: 1 3 9 11
    decl <node> (53)
        on left: 4 5
        on right: 2 3
    vardec <node> (54)
        on left: 6 7 8
        on right: 4
    block <block> (55)
        on left: 9 10 11 12 13
        on right: 14 29
    fundef <node> (56)
        on left: 14
        on right: 5
    instructions <sequence> (57)
        on left: 15 16
        on right: 9 10 16
    instruction <node> (58)
        on left: 17 18 19 20 21 22 23 24 25 26 27 28 29 30
        on right: 15 16 21 22 23 24
    ptr <node> (59)
        on left: 31
        on right: 30
    data_type <type> (60)
        on left: 32 33
        on right: 6 7 8 14 31
    opt_initializer <expression> (61)
        on left: 34 35
        on right: 7 8
    expr <expression> (62)
        on left: 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55
        on right: 17 18 19 21 22 23 24 30 35 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 55
    string <s> (63)
        on left: 56 57
        on right: 37 57
    lval <lvalue> (64)
        on left: 58
        on right: 20 54 55


State 0

    0 $accept: • program $end

    tTYPE_INT     shift, and go to state 1
    tTYPE_STRING  shift, and go to state 2

    program    go to state 3
    decls      go to state 4
    decl       go to state 5
    vardec     go to state 6
    fundef     go to state 7
    data_type  go to state 8


State 1

   33 data_type: tTYPE_INT •

    $default  reduce using rule 33 (data_type)


State 2

   32 data_type: tTYPE_STRING •

    $default  reduce using rule 32 (data_type)


State 3

    0 $accept: program • $end

    $end  shift, and go to state 9


State 4

    1 program: decls •
    3 decls: decls • decl

    tTYPE_INT     shift, and go to state 1
    tTYPE_STRING  shift, and go to state 2

    $default  reduce using rule 1 (program)

    decl       go to state 10
    vardec     go to state 6
    fundef     go to state 7
    data_type  go to state 8


State 5

    2 decls: decl •

    $default  reduce using rule 2 (decls)


State 6

    4 decl: vardec • ';'

    ';'  shift, and go to state 11


State 7

    5 decl: fundef •

    $default  reduce using rule 5 (decl)


State 8

    6 vardec: data_type • '?' tIDENTIFIER
    7       | data_type • tIDENTIFIER opt_initializer
    8       | data_type • '*' tIDENTIFIER opt_initializer
   14 fundef: data_type • '*' tIDENTIFIER '(' ')' tARROW tINTEGER block block block

    tIDENTIFIER  shift, and go to state 12
    '*'          shift, and go to state 13
    '?'          shift, and go to state 14


State 9

    0 $accept: program $end •

    $default  accept


State 10

    3 decls: decls decl •

    $default  reduce using rule 3 (decls)


State 11

    4 decl: vardec ';' •

    $default  reduce using rule 4 (decl)


State 12

    7 vardec: data_type tIDENTIFIER • opt_initializer

    '='  shift, and go to state 15

    $default  reduce using rule 34 (opt_initializer)

    opt_initializer  go to state 16


State 13

    8 vardec: data_type '*' • tIDENTIFIER opt_initializer
   14 fundef: data_type '*' • tIDENTIFIER '(' ')' tARROW tINTEGER block block block

    tIDENTIFIER  shift, and go to state 17


State 14

    6 vardec: data_type '?' • tIDENTIFIER

    tIDENTIFIER  shift, and go to state 18


State 15

   35 opt_initializer: '=' • expr

    tINTEGER     shift, and go to state 19
    tIDENTIFIER  shift, and go to state 20
    tSTRING      shift, and go to state 21
    '+'          shift, and go to state 22
    '-'          shift, and go to state 23
    '('          shift, and go to state 24

    expr    go to state 25
    string  go to state 26
    lval    go to state 27


State 16

    7 vardec: data_type tIDENTIFIER opt_initializer •

    $default  reduce using rule 7 (vardec)


State 17

    8 vardec: data_type '*' tIDENTIFIER • opt_initializer
   14 fundef: data_type '*' tIDENTIFIER • '(' ')' tARROW tINTEGER block block block

    '='  shift, and go to state 15
    '('  shift, and go to state 28

    $default  reduce using rule 34 (opt_initializer)

    opt_initializer  go to state 29


State 18

    6 vardec: data_type '?' tIDENTIFIER •

    $default  reduce using rule 6 (vardec)


State 19

   36 expr: tINTEGER •

    $default  reduce using rule 36 (expr)


State 20

   58 lval: tIDENTIFIER •

    $default  reduce using rule 58 (lval)


State 21

   56 string: tSTRING •

    $default  reduce using rule 56 (string)


State 22

   39 expr: '+' • expr

    tINTEGER     shift, and go to state 19
    tIDENTIFIER  shift, and go to state 20
    tSTRING      shift, and go to state 21
    '+'          shift, and go to state 22
    '-'          shift, and go to state 23
    '('          shift, and go to state 24

    expr    go to state 30
    string  go to state 26
    lval    go to state 27


State 23

   38 expr: '-' • expr

    tINTEGER     shift, and go to state 19
    tIDENTIFIER  shift, and go to state 20
    tSTRING      shift, and go to state 21
    '+'          shift, and go to state 22
    '-'          shift, and go to state 23
    '('          shift, and go to state 24

    expr    go to state 31
    string  go to state 26
    lval    go to state 27


State 24

   53 expr: '(' • expr ')'

    tINTEGER     shift, and go to state 19
    tIDENTIFIER  shift, and go to state 20
    tSTRING      shift, and go to state 21
    '+'          shift, and go to state 22
    '-'          shift, and go to state 23
    '('          shift, and go to state 24

    expr    go to state 32
    string  go to state 26
    lval    go to state 27


State 25

   35 opt_initializer: '=' expr •
   40 expr: expr • '+' expr
   41     | expr • '-' expr
   42     | expr • '*' expr
   43     | expr • '/' expr
   44     | expr • '%' expr
   45     | expr • '<' expr
   46     | expr • '>' expr
   47     | expr • tGE expr
   48     | expr • tLE expr
   49     | expr • tNE expr
   50     | expr • tEQ expr
   51     | expr • tAND expr
   52     | expr • tOR expr

    tOR   shift, and go to state 33
    tAND  shift, and go to state 34
    tEQ   shift, and go to state 35
    tNE   shift, and go to state 36
    tGE   shift, and go to state 37
    tLE   shift, and go to state 38
    '>'   shift, and go to state 39
    '<'   shift, and go to state 40
    '+'   shift, and go to state 41
    '-'   shift, and go to state 42
    '*'   shift, and go to state 43
    '/'   shift, and go to state 44
    '%'   shift, and go to state 45

    $default  reduce using rule 35 (opt_initializer)


State 26

   37 expr: string •
   57 string: string • tSTRING

    tSTRING  shift, and go to state 46

    $default  reduce using rule 37 (expr)


State 27

   54 expr: lval •
   55     | lval • '=' expr

    '='  shift, and go to state 47

    $default  reduce using rule 54 (expr)


State 28

   14 fundef: data_type '*' tIDENTIFIER '(' • ')' tARROW tINTEGER block block block

    ')'  shift, and go to state 48


State 29

    8 vardec: data_type '*' tIDENTIFIER opt_initializer •

    $default  reduce using rule 8 (vardec)


State 30

   39 expr: '+' expr •
   40     | expr • '+' expr
   41     | expr • '-' expr
   42     | expr • '*' expr
   43     | expr • '/' expr
   44     | expr • '%' expr
   45     | expr • '<' expr
   46     | expr • '>' expr
   47     | expr • tGE expr
   48     | expr • tLE expr
   49     | expr • tNE expr
   50     | expr • tEQ expr
   51     | expr • tAND expr
   52     | expr • tOR expr

    $default  reduce using rule 39 (expr)


State 31

   38 expr: '-' expr •
   40     | expr • '+' expr
   41     | expr • '-' expr
   42     | expr • '*' expr
   43     | expr • '/' expr
   44     | expr • '%' expr
   45     | expr • '<' expr
   46     | expr • '>' expr
   47     | expr • tGE expr
   48     | expr • tLE expr
   49     | expr • tNE expr
   50     | expr • tEQ expr
   51     | expr • tAND expr
   52     | expr • tOR expr

    $default  reduce using rule 38 (expr)


State 32

   40 expr: expr • '+' expr
   41     | expr • '-' expr
   42     | expr • '*' expr
   43     | expr • '/' expr
   44     | expr • '%' expr
   45     | expr • '<' expr
   46     | expr • '>' expr
   47     | expr • tGE expr
   48     | expr • tLE expr
   49     | expr • tNE expr
   50     | expr • tEQ expr
   51     | expr • tAND expr
   52     | expr • tOR expr
   53     | '(' expr • ')'

    tOR   shift, and go to state 33
    tAND  shift, and go to state 34
    tEQ   shift, and go to state 35
    tNE   shift, and go to state 36
    tGE   shift, and go to state 37
    tLE   shift, and go to state 38
    '>'   shift, and go to state 39
    '<'   shift, and go to state 40
    '+'   shift, and go to state 41
    '-'   shift, and go to state 42
    '*'   shift, and go to state 43
    '/'   shift, and go to state 44
    '%'   shift, and go to state 45
    ')'   shift, and go to state 49


State 33

   52 expr: expr tOR • expr

    tINTEGER     shift, and go to state 19
    tIDENTIFIER  shift, and go to state 20
    tSTRING      shift, and go to state 21
    '+'          shift, and go to state 22
    '-'          shift, and go to state 23
    '('          shift, and go to state 24

    expr    go to state 50
    string  go to state 26
    lval    go to state 27


State 34

   51 expr: expr tAND • expr

    tINTEGER     shift, and go to state 19
    tIDENTIFIER  shift, and go to state 20
    tSTRING      shift, and go to state 21
    '+'          shift, and go to state 22
    '-'          shift, and go to state 23
    '('          shift, and go to state 24

    expr    go to state 51
    string  go to state 26
    lval    go to state 27


State 35

   50 expr: expr tEQ • expr

    tINTEGER     shift, and go to state 19
    tIDENTIFIER  shift, and go to state 20
    tSTRING      shift, and go to state 21
    '+'          shift, and go to state 22
    '-'          shift, and go to state 23
    '('          shift, and go to state 24

    expr    go to state 52
    string  go to state 26
    lval    go to state 27


State 36

   49 expr: expr tNE • expr

    tINTEGER     shift, and go to state 19
    tIDENTIFIER  shift, and go to state 20
    tSTRING      shift, and go to state 21
    '+'          shift, and go to state 22
    '-'          shift, and go to state 23
    '('          shift, and go to state 24

    expr    go to state 53
    string  go to state 26
    lval    go to state 27


State 37

   47 expr: expr tGE • expr

    tINTEGER     shift, and go to state 19
    tIDENTIFIER  shift, and go to state 20
    tSTRING      shift, and go to state 21
    '+'          shift, and go to state 22
    '-'          shift, and go to state 23
    '('          shift, and go to state 24

    expr    go to state 54
    string  go to state 26
    lval    go to state 27


State 38

   48 expr: expr tLE • expr

    tINTEGER     shift, and go to state 19
    tIDENTIFIER  shift, and go to state 20
    tSTRING      shift, and go to state 21
    '+'          shift, and go to state 22
    '-'          shift, and go to state 23
    '('          shift, and go to state 24

    expr    go to state 55
    string  go to state 26
    lval    go to state 27


State 39

   46 expr: expr '>' • expr

    tINTEGER     shift, and go to state 19
    tIDENTIFIER  shift, and go to state 20
    tSTRING      shift, and go to state 21
    '+'          shift, and go to state 22
    '-'          shift, and go to state 23
    '('          shift, and go to state 24

    expr    go to state 56
    string  go to state 26
    lval    go to state 27


State 40

   45 expr: expr '<' • expr

    tINTEGER     shift, and go to state 19
    tIDENTIFIER  shift, and go to state 20
    tSTRING      shift, and go to state 21
    '+'          shift, and go to state 22
    '-'          shift, and go to state 23
    '('          shift, and go to state 24

    expr    go to state 57
    string  go to state 26
    lval    go to state 27


State 41

   40 expr: expr '+' • expr

    tINTEGER     shift, and go to state 19
    tIDENTIFIER  shift, and go to state 20
    tSTRING      shift, and go to state 21
    '+'          shift, and go to state 22
    '-'          shift, and go to state 23
    '('          shift, and go to state 24

    expr    go to state 58
    string  go to state 26
    lval    go to state 27


State 42

   41 expr: expr '-' • expr

    tINTEGER     shift, and go to state 19
    tIDENTIFIER  shift, and go to state 20
    tSTRING      shift, and go to state 21
    '+'          shift, and go to state 22
    '-'          shift, and go to state 23
    '('          shift, and go to state 24

    expr    go to state 59
    string  go to state 26
    lval    go to state 27


State 43

   42 expr: expr '*' • expr

    tINTEGER     shift, and go to state 19
    tIDENTIFIER  shift, and go to state 20
    tSTRING      shift, and go to state 21
    '+'          shift, and go to state 22
    '-'          shift, and go to state 23
    '('          shift, and go to state 24

    expr    go to state 60
    string  go to state 26
    lval    go to state 27


State 44

   43 expr: expr '/' • expr

    tINTEGER     shift, and go to state 19
    tIDENTIFIER  shift, and go to state 20
    tSTRING      shift, and go to state 21
    '+'          shift, and go to state 22
    '-'          shift, and go to state 23
    '('          shift, and go to state 24

    expr    go to state 61
    string  go to state 26
    lval    go to state 27


State 45

   44 expr: expr '%' • expr

    tINTEGER     shift, and go to state 19
    tIDENTIFIER  shift, and go to state 20
    tSTRING      shift, and go to state 21
    '+'          shift, and go to state 22
    '-'          shift, and go to state 23
    '('          shift, and go to state 24

    expr    go to state 62
    string  go to state 26
    lval    go to state 27


State 46

   57 string: string tSTRING •

    $default  reduce using rule 57 (string)


State 47

   55 expr: lval '=' • expr

    tINTEGER     shift, and go to state 19
    tIDENTIFIER  shift, and go to state 20
    tSTRING      shift, and go to state 21
    '+'          shift, and go to state 22
    '-'          shift, and go to state 23
    '('          shift, and go to state 24

    expr    go to state 63
    string  go to state 26
    lval    go to state 27


State 48

   14 fundef: data_type '*' tIDENTIFIER '(' ')' • tARROW tINTEGER block block block

    tARROW  shift, and go to state 64


State 49

   53 expr: '(' expr ')' •

    $default  reduce using rule 53 (expr)


State 50

   40 expr: expr • '+' expr
   41     | expr • '-' expr
   42     | expr • '*' expr
   43     | expr • '/' expr
   44     | expr • '%' expr
   45     | expr • '<' expr
   46     | expr • '>' expr
   47     | expr • tGE expr
   48     | expr • tLE expr
   49     | expr • tNE expr
   50     | expr • tEQ expr
   51     | expr • tAND expr
   52     | expr • tOR expr
   52     | expr tOR expr •

    tAND  shift, and go to state 34
    tEQ   shift, and go to state 35
    tNE   shift, and go to state 36
    tGE   shift, and go to state 37
    tLE   shift, and go to state 38
    '>'   shift, and go to state 39
    '<'   shift, and go to state 40
    '+'   shift, and go to state 41
    '-'   shift, and go to state 42
    '*'   shift, and go to state 43
    '/'   shift, and go to state 44
    '%'   shift, and go to state 45

    $default  reduce using rule 52 (expr)


State 51

   40 expr: expr • '+' expr
   41     | expr • '-' expr
   42     | expr • '*' expr
   43     | expr • '/' expr
   44     | expr • '%' expr
   45     | expr • '<' expr
   46     | expr • '>' expr
   47     | expr • tGE expr
   48     | expr • tLE expr
   49     | expr • tNE expr
   50     | expr • tEQ expr
   51     | expr • tAND expr
   51     | expr tAND expr •
   52     | expr • tOR expr

    tEQ  shift, and go to state 35
    tNE  shift, and go to state 36
    tGE  shift, and go to state 37
    tLE  shift, and go to state 38
    '>'  shift, and go to state 39
    '<'  shift, and go to state 40
    '+'  shift, and go to state 41
    '-'  shift, and go to state 42
    '*'  shift, and go to state 43
    '/'  shift, and go to state 44
    '%'  shift, and go to state 45

    $default  reduce using rule 51 (expr)


State 52

   40 expr: expr • '+' expr
   41     | expr • '-' expr
   42     | expr • '*' expr
   43     | expr • '/' expr
   44     | expr • '%' expr
   45     | expr • '<' expr
   46     | expr • '>' expr
   47     | expr • tGE expr
   48     | expr • tLE expr
   49     | expr • tNE expr
   50     | expr • tEQ expr
   50     | expr tEQ expr •
   51     | expr • tAND expr
   52     | expr • tOR expr

    tGE  shift, and go to state 37
    tLE  shift, and go to state 38
    '>'  shift, and go to state 39
    '<'  shift, and go to state 40
    '+'  shift, and go to state 41
    '-'  shift, and go to state 42
    '*'  shift, and go to state 43
    '/'  shift, and go to state 44
    '%'  shift, and go to state 45

    $default  reduce using rule 50 (expr)


State 53

   40 expr: expr • '+' expr
   41     | expr • '-' expr
   42     | expr • '*' expr
   43     | expr • '/' expr
   44     | expr • '%' expr
   45     | expr • '<' expr
   46     | expr • '>' expr
   47     | expr • tGE expr
   48     | expr • tLE expr
   49     | expr • tNE expr
   49     | expr tNE expr •
   50     | expr • tEQ expr
   51     | expr • tAND expr
   52     | expr • tOR expr

    tGE  shift, and go to state 37
    tLE  shift, and go to state 38
    '>'  shift, and go to state 39
    '<'  shift, and go to state 40
    '+'  shift, and go to state 41
    '-'  shift, and go to state 42
    '*'  shift, and go to state 43
    '/'  shift, and go to state 44
    '%'  shift, and go to state 45

    $default  reduce using rule 49 (expr)


State 54

   40 expr: expr • '+' expr
   41     | expr • '-' expr
   42     | expr • '*' expr
   43     | expr • '/' expr
   44     | expr • '%' expr
   45     | expr • '<' expr
   46     | expr • '>' expr
   47     | expr • tGE expr
   47     | expr tGE expr •
   48     | expr • tLE expr
   49     | expr • tNE expr
   50     | expr • tEQ expr
   51     | expr • tAND expr
   52     | expr • tOR expr

    '+'  shift, and go to state 41
    '-'  shift, and go to state 42
    '*'  shift, and go to state 43
    '/'  shift, and go to state 44
    '%'  shift, and go to state 45

    $default  reduce using rule 47 (expr)


State 55

   40 expr: expr • '+' expr
   41     | expr • '-' expr
   42     | expr • '*' expr
   43     | expr • '/' expr
   44     | expr • '%' expr
   45     | expr • '<' expr
   46     | expr • '>' expr
   47     | expr • tGE expr
   48     | expr • tLE expr
   48     | expr tLE expr •
   49     | expr • tNE expr
   50     | expr • tEQ expr
   51     | expr • tAND expr
   52     | expr • tOR expr

    '+'  shift, and go to state 41
    '-'  shift, and go to state 42
    '*'  shift, and go to state 43
    '/'  shift, and go to state 44
    '%'  shift, and go to state 45

    $default  reduce using rule 48 (expr)


State 56

   40 expr: expr • '+' expr
   41     | expr • '-' expr
   42     | expr • '*' expr
   43     | expr • '/' expr
   44     | expr • '%' expr
   45     | expr • '<' expr
   46     | expr • '>' expr
   46     | expr '>' expr •
   47     | expr • tGE expr
   48     | expr • tLE expr
   49     | expr • tNE expr
   50     | expr • tEQ expr
   51     | expr • tAND expr
   52     | expr • tOR expr

    '+'  shift, and go to state 41
    '-'  shift, and go to state 42
    '*'  shift, and go to state 43
    '/'  shift, and go to state 44
    '%'  shift, and go to state 45

    $default  reduce using rule 46 (expr)


State 57

   40 expr: expr • '+' expr
   41     | expr • '-' expr
   42     | expr • '*' expr
   43     | expr • '/' expr
   44     | expr • '%' expr
   45     | expr • '<' expr
   45     | expr '<' expr •
   46     | expr • '>' expr
   47     | expr • tGE expr
   48     | expr • tLE expr
   49     | expr • tNE expr
   50     | expr • tEQ expr
   51     | expr • tAND expr
   52     | expr • tOR expr

    '+'  shift, and go to state 41
    '-'  shift, and go to state 42
    '*'  shift, and go to state 43
    '/'  shift, and go to state 44
    '%'  shift, and go to state 45

    $default  reduce using rule 45 (expr)


State 58

   40 expr: expr • '+' expr
   40     | expr '+' expr •
   41     | expr • '-' expr
   42     | expr • '*' expr
   43     | expr • '/' expr
   44     | expr • '%' expr
   45     | expr • '<' expr
   46     | expr • '>' expr
   47     | expr • tGE expr
   48     | expr • tLE expr
   49     | expr • tNE expr
   50     | expr • tEQ expr
   51     | expr • tAND expr
   52     | expr • tOR expr

    '*'  shift, and go to state 43
    '/'  shift, and go to state 44
    '%'  shift, and go to state 45

    $default  reduce using rule 40 (expr)


State 59

   40 expr: expr • '+' expr
   41     | expr • '-' expr
   41     | expr '-' expr •
   42     | expr • '*' expr
   43     | expr • '/' expr
   44     | expr • '%' expr
   45     | expr • '<' expr
   46     | expr • '>' expr
   47     | expr • tGE expr
   48     | expr • tLE expr
   49     | expr • tNE expr
   50     | expr • tEQ expr
   51     | expr • tAND expr
   52     | expr • tOR expr

    '*'  shift, and go to state 43
    '/'  shift, and go to state 44
    '%'  shift, and go to state 45

    $default  reduce using rule 41 (expr)


State 60

   40 expr: expr • '+' expr
   41     | expr • '-' expr
   42     | expr • '*' expr
   42     | expr '*' expr •
   43     | expr • '/' expr
   44     | expr • '%' expr
   45     | expr • '<' expr
   46     | expr • '>' expr
   47     | expr • tGE expr
   48     | expr • tLE expr
   49     | expr • tNE expr
   50     | expr • tEQ expr
   51     | expr • tAND expr
   52     | expr • tOR expr

    $default  reduce using rule 42 (expr)


State 61

   40 expr: expr • '+' expr
   41     | expr • '-' expr
   42     | expr • '*' expr
   43     | expr • '/' expr
   43     | expr '/' expr •
   44     | expr • '%' expr
   45     | expr • '<' expr
   46     | expr • '>' expr
   47     | expr • tGE expr
   48     | expr • tLE expr
   49     | expr • tNE expr
   50     | expr • tEQ expr
   51     | expr • tAND expr
   52     | expr • tOR expr

    $default  reduce using rule 43 (expr)


State 62

   40 expr: expr • '+' expr
   41     | expr • '-' expr
   42     | expr • '*' expr
   43     | expr • '/' expr
   44     | expr • '%' expr
   44     | expr '%' expr •
   45     | expr • '<' expr
   46     | expr • '>' expr
   47     | expr • tGE expr
   48     | expr • tLE expr
   49     | expr • tNE expr
   50     | expr • tEQ expr
   51     | expr • tAND expr
   52     | expr • tOR expr

    $default  reduce using rule 44 (expr)


State 63

   40 expr: expr • '+' expr
   41     | expr • '-' expr
   42     | expr • '*' expr
   43     | expr • '/' expr
   44     | expr • '%' expr
   45     | expr • '<' expr
   46     | expr • '>' expr
   47     | expr • tGE expr
   48     | expr • tLE expr
   49     | expr • tNE expr
   50     | expr • tEQ expr
   51     | expr • tAND expr
   52     | expr • tOR expr
   55     | lval '=' expr •

    tOR   shift, and go to state 33
    tAND  shift, and go to state 34
    tEQ   shift, and go to state 35
    tNE   shift, and go to state 36
    tGE   shift, and go to state 37
    tLE   shift, and go to state 38
    '>'   shift, and go to state 39
    '<'   shift, and go to state 40
    '+'   shift, and go to state 41
    '-'   shift, and go to state 42
    '*'   shift, and go to state 43
    '/'   shift, and go to state 44
    '%'   shift, and go to state 45

    $default  reduce using rule 55 (expr)


State 64

   14 fundef: data_type '*' tIDENTIFIER '(' ')' tARROW • tINTEGER block block block

    tINTEGER  shift, and go to state 65


State 65

   14 fundef: data_type '*' tIDENTIFIER '(' ')' tARROW tINTEGER • block block block

    '{'  shift, and go to state 66

    '{'       [reduce using rule 13 (block)]
    $default  reduce using rule 13 (block)

    block  go to state 67


State 66

    9 block: '{' • decls instructions '}'
   10      | '{' • instructions '}'
   11      | '{' • decls '}'
   12      | '{' • '}'

    tINTEGER      shift, and go to state 19
    tIDENTIFIER   shift, and go to state 20
    tSTRING       shift, and go to state 21
    tIF           shift, and go to state 68
    tTYPE_INT     shift, and go to state 1
    tTYPE_STRING  shift, and go to state 2
    tREAD         shift, and go to state 69
    tPRINT        shift, and go to state 70
    tPRINTLN      shift, and go to state 71
    tWHILE        shift, and go to state 72
    tLEAVE        shift, and go to state 73
    tRESTART      shift, and go to state 74
    tWITH         shift, and go to state 75
    '+'           shift, and go to state 22
    '-'           shift, and go to state 23
    '{'           shift, and go to state 66
    '}'           shift, and go to state 76
    '('           shift, and go to state 24

    tINTEGER     [reduce using rule 13 (block)]
    tIDENTIFIER  [reduce using rule 13 (block)]
    tSTRING      [reduce using rule 13 (block)]
    tIF          [reduce using rule 13 (block)]
    tREAD        [reduce using rule 13 (block)]
    tPRINT       [reduce using rule 13 (block)]
    tPRINTLN     [reduce using rule 13 (block)]
    tWHILE       [reduce using rule 13 (block)]
    tLEAVE       [reduce using rule 13 (block)]
    tRESTART     [reduce using rule 13 (block)]
    tWITH        [reduce using rule 13 (block)]
    '+'          [reduce using rule 13 (block)]
    '-'          [reduce using rule 13 (block)]
    '{'          [reduce using rule 13 (block)]
    '}'          [reduce using rule 13 (block)]
    '('          [reduce using rule 13 (block)]

    decls         go to state 77
    decl          go to state 5
    vardec        go to state 6
    block         go to state 78
    fundef        go to state 7
    instructions  go to state 79
    instruction   go to state 80
    data_type     go to state 8
    expr          go to state 81
    string        go to state 26
    lval          go to state 27


State 67

   14 fundef: data_type '*' tIDENTIFIER '(' ')' tARROW tINTEGER block • block block

    '{'  shift, and go to state 66

    '{'       [reduce using rule 13 (block)]
    $default  reduce using rule 13 (block)

    block  go to state 82


State 68

   21 instruction: tIF • expr tTHEN instruction
   22            | tIF • expr tTHEN instruction tELSE instruction

    tINTEGER     shift, and go to state 19
    tIDENTIFIER  shift, and go to state 20
    tSTRING      shift, and go to state 21
    '+'          shift, and go to state 22
    '-'          shift, and go to state 23
    '('          shift, and go to state 24

    expr    go to state 83
    string  go to state 26
    lval    go to state 27


State 69

   20 instruction: tREAD • lval ';'

    tIDENTIFIER  shift, and go to state 20

    lval  go to state 84


State 70

   18 instruction: tPRINT • expr ';'

    tINTEGER     shift, and go to state 19
    tIDENTIFIER  shift, and go to state 20
    tSTRING      shift, and go to state 21
    '+'          shift, and go to state 22
    '-'          shift, and go to state 23
    '('          shift, and go to state 24

    expr    go to state 85
    string  go to state 26
    lval    go to state 27


State 71

   19 instruction: tPRINTLN • expr ';'

    tINTEGER     shift, and go to state 19
    tIDENTIFIER  shift, and go to state 20
    tSTRING      shift, and go to state 21
    '+'          shift, and go to state 22
    '-'          shift, and go to state 23
    '('          shift, and go to state 24

    expr    go to state 86
    string  go to state 26
    lval    go to state 27


State 72

   23 instruction: tWHILE • expr tDO instruction tFINALLY instruction
   24            | tWHILE • expr tDO instruction

    tINTEGER     shift, and go to state 19
    tIDENTIFIER  shift, and go to state 20
    tSTRING      shift, and go to state 21
    '+'          shift, and go to state 22
    '-'          shift, and go to state 23
    '('          shift, and go to state 24

    expr    go to state 87
    string  go to state 26
    lval    go to state 27


State 73

   25 instruction: tLEAVE • ';'
   26            | tLEAVE • tINTEGER ';'

    tINTEGER  shift, and go to state 88
    ';'       shift, and go to state 89


State 74

   27 instruction: tRESTART • ';'
   28            | tRESTART • tINTEGER ';'

    tINTEGER  shift, and go to state 90
    ';'       shift, and go to state 91


State 75

   30 instruction: tWITH • ptr tAPPLY tIDENTIFIER tIN expr tSCALE expr ';'

    '<'  shift, and go to state 92

    ptr  go to state 93


State 76

   12 block: '{' '}' •

    $default  reduce using rule 12 (block)


State 77

    3 decls: decls • decl
    9 block: '{' decls • instructions '}'
   11      | '{' decls • '}'

    tINTEGER      shift, and go to state 19
    tIDENTIFIER   shift, and go to state 20
    tSTRING       shift, and go to state 21
    tIF           shift, and go to state 68
    tTYPE_INT     shift, and go to state 1
    tTYPE_STRING  shift, and go to state 2
    tREAD         shift, and go to state 69
    tPRINT        shift, and go to state 70
    tPRINTLN      shift, and go to state 71
    tWHILE        shift, and go to state 72
    tLEAVE        shift, and go to state 73
    tRESTART      shift, and go to state 74
    tWITH         shift, and go to state 75
    '+'           shift, and go to state 22
    '-'           shift, and go to state 23
    '{'           shift, and go to state 66
    '}'           shift, and go to state 94
    '('           shift, and go to state 24

    tINTEGER     [reduce using rule 13 (block)]
    tIDENTIFIER  [reduce using rule 13 (block)]
    tSTRING      [reduce using rule 13 (block)]
    tIF          [reduce using rule 13 (block)]
    tREAD        [reduce using rule 13 (block)]
    tPRINT       [reduce using rule 13 (block)]
    tPRINTLN     [reduce using rule 13 (block)]
    tWHILE       [reduce using rule 13 (block)]
    tLEAVE       [reduce using rule 13 (block)]
    tRESTART     [reduce using rule 13 (block)]
    tWITH        [reduce using rule 13 (block)]
    '+'          [reduce using rule 13 (block)]
    '-'          [reduce using rule 13 (block)]
    '{'          [reduce using rule 13 (block)]
    '}'          [reduce using rule 13 (block)]
    '('          [reduce using rule 13 (block)]

    decl          go to state 10
    vardec        go to state 6
    block         go to state 78
    fundef        go to state 7
    instructions  go to state 95
    instruction   go to state 80
    data_type     go to state 8
    expr          go to state 81
    string        go to state 26
    lval          go to state 27


State 78

   29 instruction: block •

    $default  reduce using rule 29 (instruction)


State 79

   10 block: '{' instructions • '}'
   16 instructions: instructions • instruction

    tINTEGER     shift, and go to state 19
    tIDENTIFIER  shift, and go to state 20
    tSTRING      shift, and go to state 21
    tIF          shift, and go to state 68
    tREAD        shift, and go to state 69
    tPRINT       shift, and go to state 70
    tPRINTLN     shift, and go to state 71
    tWHILE       shift, and go to state 72
    tLEAVE       shift, and go to state 73
    tRESTART     shift, and go to state 74
    tWITH        shift, and go to state 75
    '+'          shift, and go to state 22
    '-'          shift, and go to state 23
    '{'          shift, and go to state 66
    '}'          shift, and go to state 96
    '('          shift, and go to state 24

    tINTEGER     [reduce using rule 13 (block)]
    tIDENTIFIER  [reduce using rule 13 (block)]
    tSTRING      [reduce using rule 13 (block)]
    tIF          [reduce using rule 13 (block)]
    tREAD        [reduce using rule 13 (block)]
    tPRINT       [reduce using rule 13 (block)]
    tPRINTLN     [reduce using rule 13 (block)]
    tWHILE       [reduce using rule 13 (block)]
    tLEAVE       [reduce using rule 13 (block)]
    tRESTART     [reduce using rule 13 (block)]
    tWITH        [reduce using rule 13 (block)]
    '+'          [reduce using rule 13 (block)]
    '-'          [reduce using rule 13 (block)]
    '{'          [reduce using rule 13 (block)]
    '}'          [reduce using rule 13 (block)]
    '('          [reduce using rule 13 (block)]

    block        go to state 78
    instruction  go to state 97
    expr         go to state 81
    string       go to state 26
    lval         go to state 27


State 80

   15 instructions: instruction •

    $default  reduce using rule 15 (instructions)


State 81

   17 instruction: expr • ';'
   40 expr: expr • '+' expr
   41     | expr • '-' expr
   42     | expr • '*' expr
   43     | expr • '/' expr
   44     | expr • '%' expr
   45     | expr • '<' expr
   46     | expr • '>' expr
   47     | expr • tGE expr
   48     | expr • tLE expr
   49     | expr • tNE expr
   50     | expr • tEQ expr
   51     | expr • tAND expr
   52     | expr • tOR expr

    tOR   shift, and go to state 33
    tAND  shift, and go to state 34
    tEQ   shift, and go to state 35
    tNE   shift, and go to state 36
    tGE   shift, and go to state 37
    tLE   shift, and go to state 38
    '>'   shift, and go to state 39
    '<'   shift, and go to state 40
    '+'   shift, and go to state 41
    '-'   shift, and go to state 42
    '*'   shift, and go to state 43
    '/'   shift, and go to state 44
    '%'   shift, and go to state 45
    ';'   shift, and go to state 98


State 82

   14 fundef: data_type '*' tIDENTIFIER '(' ')' tARROW tINTEGER block block • block

    '{'  shift, and go to state 66

    '{'       [reduce using rule 13 (block)]
    $default  reduce using rule 13 (block)

    block  go to state 99


State 83

   21 instruction: tIF expr • tTHEN instruction
   22            | tIF expr • tTHEN instruction tELSE instruction
   40 expr: expr • '+' expr
   41     | expr • '-' expr
   42     | expr • '*' expr
   43     | expr • '/' expr
   44     | expr • '%' expr
   45     | expr • '<' expr
   46     | expr • '>' expr
   47     | expr • tGE expr
   48     | expr • tLE expr
   49     | expr • tNE expr
   50     | expr • tEQ expr
   51     | expr • tAND expr
   52     | expr • tOR expr

    tTHEN  shift, and go to state 100
    tOR    shift, and go to state 33
    tAND   shift, and go to state 34
    tEQ    shift, and go to state 35
    tNE    shift, and go to state 36
    tGE    shift, and go to state 37
    tLE    shift, and go to state 38
    '>'    shift, and go to state 39
    '<'    shift, and go to state 40
    '+'    shift, and go to state 41
    '-'    shift, and go to state 42
    '*'    shift, and go to state 43
    '/'    shift, and go to state 44
    '%'    shift, and go to state 45


State 84

   20 instruction: tREAD lval • ';'

    ';'  shift, and go to state 101


State 85

   18 instruction: tPRINT expr • ';'
   40 expr: expr • '+' expr
   41     | expr • '-' expr
   42     | expr • '*' expr
   43     | expr • '/' expr
   44     | expr • '%' expr
   45     | expr • '<' expr
   46     | expr • '>' expr
   47     | expr • tGE expr
   48     | expr • tLE expr
   49     | expr • tNE expr
   50     | expr • tEQ expr
   51     | expr • tAND expr
   52     | expr • tOR expr

    tOR   shift, and go to state 33
    tAND  shift, and go to state 34
    tEQ   shift, and go to state 35
    tNE   shift, and go to state 36
    tGE   shift, and go to state 37
    tLE   shift, and go to state 38
    '>'   shift, and go to state 39
    '<'   shift, and go to state 40
    '+'   shift, and go to state 41
    '-'   shift, and go to state 42
    '*'   shift, and go to state 43
    '/'   shift, and go to state 44
    '%'   shift, and go to state 45
    ';'   shift, and go to state 102


State 86

   19 instruction: tPRINTLN expr • ';'
   40 expr: expr • '+' expr
   41     | expr • '-' expr
   42     | expr • '*' expr
   43     | expr • '/' expr
   44     | expr • '%' expr
   45     | expr • '<' expr
   46     | expr • '>' expr
   47     | expr • tGE expr
   48     | expr • tLE expr
   49     | expr • tNE expr
   50     | expr • tEQ expr
   51     | expr • tAND expr
   52     | expr • tOR expr

    tOR   shift, and go to state 33
    tAND  shift, and go to state 34
    tEQ   shift, and go to state 35
    tNE   shift, and go to state 36
    tGE   shift, and go to state 37
    tLE   shift, and go to state 38
    '>'   shift, and go to state 39
    '<'   shift, and go to state 40
    '+'   shift, and go to state 41
    '-'   shift, and go to state 42
    '*'   shift, and go to state 43
    '/'   shift, and go to state 44
    '%'   shift, and go to state 45
    ';'   shift, and go to state 103


State 87

   23 instruction: tWHILE expr • tDO instruction tFINALLY instruction
   24            | tWHILE expr • tDO instruction
   40 expr: expr • '+' expr
   41     | expr • '-' expr
   42     | expr • '*' expr
   43     | expr • '/' expr
   44     | expr • '%' expr
   45     | expr • '<' expr
   46     | expr • '>' expr
   47     | expr • tGE expr
   48     | expr • tLE expr
   49     | expr • tNE expr
   50     | expr • tEQ expr
   51     | expr • tAND expr
   52     | expr • tOR expr

    tDO   shift, and go to state 104
    tOR   shift, and go to state 33
    tAND  shift, and go to state 34
    tEQ   shift, and go to state 35
    tNE   shift, and go to state 36
    tGE   shift, and go to state 37
    tLE   shift, and go to state 38
    '>'   shift, and go to state 39
    '<'   shift, and go to state 40
    '+'   shift, and go to state 41
    '-'   shift, and go to state 42
    '*'   shift, and go to state 43
    '/'   shift, and go to state 44
    '%'   shift, and go to state 45


State 88

   26 instruction: tLEAVE tINTEGER • ';'

    ';'  shift, and go to state 105


State 89

   25 instruction: tLEAVE ';' •

    $default  reduce using rule 25 (instruction)


State 90

   28 instruction: tRESTART tINTEGER • ';'

    ';'  shift, and go to state 106


State 91

   27 instruction: tRESTART ';' •

    $default  reduce using rule 27 (instruction)


State 92

   31 ptr: '<' • data_type '>'

    tTYPE_INT     shift, and go to state 1
    tTYPE_STRING  shift, and go to state 2

    data_type  go to state 107


State 93

   30 instruction: tWITH ptr • tAPPLY tIDENTIFIER tIN expr tSCALE expr ';'

    tAPPLY  shift, and go to state 108


State 94

   11 block: '{' decls '}' •

    $default  reduce using rule 11 (block)


State 95

    9 block: '{' decls instructions • '}'
   16 instructions: instructions • instruction

    tINTEGER     shift, and go to state 19
    tIDENTIFIER  shift, and go to state 20
    tSTRING      shift, and go to state 21
    tIF          shift, and go to state 68
    tREAD        shift, and go to state 69
    tPRINT       shift, and go to state 70
    tPRINTLN     shift, and go to state 71
    tWHILE       shift, and go to state 72
    tLEAVE       shift, and go to state 73
    tRESTART     shift, and go to state 74
    tWITH        shift, and go to state 75
    '+'          shift, and go to state 22
    '-'          shift, and go to state 23
    '{'          shift, and go to state 66
    '}'          shift, and go to state 109
    '('          shift, and go to state 24

    tINTEGER     [reduce using rule 13 (block)]
    tIDENTIFIER  [reduce using rule 13 (block)]
    tSTRING      [reduce using rule 13 (block)]
    tIF          [reduce using rule 13 (block)]
    tREAD        [reduce using rule 13 (block)]
    tPRINT       [reduce using rule 13 (block)]
    tPRINTLN     [reduce using rule 13 (block)]
    tWHILE       [reduce using rule 13 (block)]
    tLEAVE       [reduce using rule 13 (block)]
    tRESTART     [reduce using rule 13 (block)]
    tWITH        [reduce using rule 13 (block)]
    '+'          [reduce using rule 13 (block)]
    '-'          [reduce using rule 13 (block)]
    '{'          [reduce using rule 13 (block)]
    '}'          [reduce using rule 13 (block)]
    '('          [reduce using rule 13 (block)]

    block        go to state 78
    instruction  go to state 97
    expr         go to state 81
    string       go to state 26
    lval         go to state 27


State 96

   10 block: '{' instructions '}' •

    $default  reduce using rule 10 (block)


State 97

   16 instructions: instructions instruction •

    $default  reduce using rule 16 (instructions)


State 98

   17 instruction: expr ';' •

    $default  reduce using rule 17 (instruction)


State 99

   14 fundef: data_type '*' tIDENTIFIER '(' ')' tARROW tINTEGER block block block •

    $default  reduce using rule 14 (fundef)


State 100

   21 instruction: tIF expr tTHEN • instruction
   22            | tIF expr tTHEN • instruction tELSE instruction

    tINTEGER     shift, and go to state 19
    tIDENTIFIER  shift, and go to state 20
    tSTRING      shift, and go to state 21
    tIF          shift, and go to state 68
    tREAD        shift, and go to state 69
    tPRINT       shift, and go to state 70
    tPRINTLN     shift, and go to state 71
    tWHILE       shift, and go to state 72
    tLEAVE       shift, and go to state 73
    tRESTART     shift, and go to state 74
    tWITH        shift, and go to state 75
    '+'          shift, and go to state 22
    '-'          shift, and go to state 23
    '{'          shift, and go to state 66
    '('          shift, and go to state 24

    tINTEGER     [reduce using rule 13 (block)]
    tIDENTIFIER  [reduce using rule 13 (block)]
    tSTRING      [reduce using rule 13 (block)]
    tIF          [reduce using rule 13 (block)]
    tREAD        [reduce using rule 13 (block)]
    tPRINT       [reduce using rule 13 (block)]
    tPRINTLN     [reduce using rule 13 (block)]
    tWHILE       [reduce using rule 13 (block)]
    tLEAVE       [reduce using rule 13 (block)]
    tRESTART     [reduce using rule 13 (block)]
    tWITH        [reduce using rule 13 (block)]
    '+'          [reduce using rule 13 (block)]
    '-'          [reduce using rule 13 (block)]
    '{'          [reduce using rule 13 (block)]
    '('          [reduce using rule 13 (block)]
    $default     reduce using rule 13 (block)

    block        go to state 78
    instruction  go to state 110
    expr         go to state 81
    string       go to state 26
    lval         go to state 27


State 101

   20 instruction: tREAD lval ';' •

    $default  reduce using rule 20 (instruction)


State 102

   18 instruction: tPRINT expr ';' •

    $default  reduce using rule 18 (instruction)


State 103

   19 instruction: tPRINTLN expr ';' •

    $default  reduce using rule 19 (instruction)


State 104

   23 instruction: tWHILE expr tDO • instruction tFINALLY instruction
   24            | tWHILE expr tDO • instruction

    tINTEGER     shift, and go to state 19
    tIDENTIFIER  shift, and go to state 20
    tSTRING      shift, and go to state 21
    tIF          shift, and go to state 68
    tREAD        shift, and go to state 69
    tPRINT       shift, and go to state 70
    tPRINTLN     shift, and go to state 71
    tWHILE       shift, and go to state 72
    tLEAVE       shift, and go to state 73
    tRESTART     shift, and go to state 74
    tWITH        shift, and go to state 75
    '+'          shift, and go to state 22
    '-'          shift, and go to state 23
    '{'          shift, and go to state 66
    '('          shift, and go to state 24

    tINTEGER     [reduce using rule 13 (block)]
    tIDENTIFIER  [reduce using rule 13 (block)]
    tSTRING      [reduce using rule 13 (block)]
    tIF          [reduce using rule 13 (block)]
    tREAD        [reduce using rule 13 (block)]
    tPRINT       [reduce using rule 13 (block)]
    tPRINTLN     [reduce using rule 13 (block)]
    tWHILE       [reduce using rule 13 (block)]
    tLEAVE       [reduce using rule 13 (block)]
    tRESTART     [reduce using rule 13 (block)]
    tWITH        [reduce using rule 13 (block)]
    '+'          [reduce using rule 13 (block)]
    '-'          [reduce using rule 13 (block)]
    '{'          [reduce using rule 13 (block)]
    '('          [reduce using rule 13 (block)]
    $default     reduce using rule 13 (block)

    block        go to state 78
    instruction  go to state 111
    expr         go to state 81
    string       go to state 26
    lval         go to state 27


State 105

   26 instruction: tLEAVE tINTEGER ';' •

    $default  reduce using rule 26 (instruction)


State 106

   28 instruction: tRESTART tINTEGER ';' •

    $default  reduce using rule 28 (instruction)


State 107

   31 ptr: '<' data_type • '>'

    '>'  shift, and go to state 112


State 108

   30 instruction: tWITH ptr tAPPLY • tIDENTIFIER tIN expr tSCALE expr ';'

    tIDENTIFIER  shift, and go to state 113


State 109

    9 block: '{' decls instructions '}' •

    $default  reduce using rule 9 (block)


State 110

   21 instruction: tIF expr tTHEN instruction •
   22            | tIF expr tTHEN instruction • tELSE instruction

    tELSE  shift, and go to state 114

    $default  reduce using rule 21 (instruction)


State 111

   23 instruction: tWHILE expr tDO instruction • tFINALLY instruction
   24            | tWHILE expr tDO instruction •

    tFINALLY  shift, and go to state 115

    $default  reduce using rule 24 (instruction)


State 112

   31 ptr: '<' data_type '>' •

    $default  reduce using rule 31 (ptr)


State 113

   30 instruction: tWITH ptr tAPPLY tIDENTIFIER • tIN expr tSCALE expr ';'

    tIN  shift, and go to state 116


State 114

   22 instruction: tIF expr tTHEN instruction tELSE • instruction

    tINTEGER     shift, and go to state 19
    tIDENTIFIER  shift, and go to state 20
    tSTRING      shift, and go to state 21
    tIF          shift, and go to state 68
    tREAD        shift, and go to state 69
    tPRINT       shift, and go to state 70
    tPRINTLN     shift, and go to state 71
    tWHILE       shift, and go to state 72
    tLEAVE       shift, and go to state 73
    tRESTART     shift, and go to state 74
    tWITH        shift, and go to state 75
    '+'          shift, and go to state 22
    '-'          shift, and go to state 23
    '{'          shift, and go to state 66
    '('          shift, and go to state 24

    tINTEGER     [reduce using rule 13 (block)]
    tIDENTIFIER  [reduce using rule 13 (block)]
    tSTRING      [reduce using rule 13 (block)]
    tIF          [reduce using rule 13 (block)]
    tREAD        [reduce using rule 13 (block)]
    tPRINT       [reduce using rule 13 (block)]
    tPRINTLN     [reduce using rule 13 (block)]
    tWHILE       [reduce using rule 13 (block)]
    tLEAVE       [reduce using rule 13 (block)]
    tRESTART     [reduce using rule 13 (block)]
    tWITH        [reduce using rule 13 (block)]
    '+'          [reduce using rule 13 (block)]
    '-'          [reduce using rule 13 (block)]
    '{'          [reduce using rule 13 (block)]
    '('          [reduce using rule 13 (block)]
    $default     reduce using rule 13 (block)

    block        go to state 78
    instruction  go to state 117
    expr         go to state 81
    string       go to state 26
    lval         go to state 27


State 115

   23 instruction: tWHILE expr tDO instruction tFINALLY • instruction

    tINTEGER     shift, and go to state 19
    tIDENTIFIER  shift, and go to state 20
    tSTRING      shift, and go to state 21
    tIF          shift, and go to state 68
    tREAD        shift, and go to state 69
    tPRINT       shift, and go to state 70
    tPRINTLN     shift, and go to state 71
    tWHILE       shift, and go to state 72
    tLEAVE       shift, and go to state 73
    tRESTART     shift, and go to state 74
    tWITH        shift, and go to state 75
    '+'          shift, and go to state 22
    '-'          shift, and go to state 23
    '{'          shift, and go to state 66
    '('          shift, and go to state 24

    tINTEGER     [reduce using rule 13 (block)]
    tIDENTIFIER  [reduce using rule 13 (block)]
    tSTRING      [reduce using rule 13 (block)]
    tIF          [reduce using rule 13 (block)]
    tREAD        [reduce using rule 13 (block)]
    tPRINT       [reduce using rule 13 (block)]
    tPRINTLN     [reduce using rule 13 (block)]
    tWHILE       [reduce using rule 13 (block)]
    tLEAVE       [reduce using rule 13 (block)]
    tRESTART     [reduce using rule 13 (block)]
    tWITH        [reduce using rule 13 (block)]
    '+'          [reduce using rule 13 (block)]
    '-'          [reduce using rule 13 (block)]
    '{'          [reduce using rule 13 (block)]
    '('          [reduce using rule 13 (block)]
    $default     reduce using rule 13 (block)

    block        go to state 78
    instruction  go to state 118
    expr         go to state 81
    string       go to state 26
    lval         go to state 27


State 116

   30 instruction: tWITH ptr tAPPLY tIDENTIFIER tIN • expr tSCALE expr ';'

    tINTEGER     shift, and go to state 19
    tIDENTIFIER  shift, and go to state 20
    tSTRING      shift, and go to state 21
    '+'          shift, and go to state 22
    '-'          shift, and go to state 23
    '('          shift, and go to state 24

    expr    go to state 119
    string  go to state 26
    lval    go to state 27


State 117

   22 instruction: tIF expr tTHEN instruction tELSE instruction •

    $default  reduce using rule 22 (instruction)


State 118

   23 instruction: tWHILE expr tDO instruction tFINALLY instruction •

    $default  reduce using rule 23 (instruction)


State 119

   30 instruction: tWITH ptr tAPPLY tIDENTIFIER tIN expr • tSCALE expr ';'
   40 expr: expr • '+' expr
   41     | expr • '-' expr
   42     | expr • '*' expr
   43     | expr • '/' expr
   44     | expr • '%' expr
   45     | expr • '<' expr
   46     | expr • '>' expr
   47     | expr • tGE expr
   48     | expr • tLE expr
   49     | expr • tNE expr
   50     | expr • tEQ expr
   51     | expr • tAND expr
   52     | expr • tOR expr

    tSCALE  shift, and go to state 120
    tOR     shift, and go to state 33
    tAND    shift, and go to state 34
    tEQ     shift, and go to state 35
    tNE     shift, and go to state 36
    tGE     shift, and go to state 37
    tLE     shift, and go to state 38
    '>'     shift, and go to state 39
    '<'     shift, and go to state 40
    '+'     shift, and go to state 41
    '-'     shift, and go to state 42
    '*'     shift, and go to state 43
    '/'     shift, and go to state 44
    '%'     shift, and go to state 45


State 120

   30 instruction: tWITH ptr tAPPLY tIDENTIFIER tIN expr tSCALE • expr ';'

    tINTEGER     shift, and go to state 19
    tIDENTIFIER  shift, and go to state 20
    tSTRING      shift, and go to state 21
    '+'          shift, and go to state 22
    '-'          shift, and go to state 23
    '('          shift, and go to state 24

    expr    go to state 121
    string  go to state 26
    lval    go to state 27


State 121

   30 instruction: tWITH ptr tAPPLY tIDENTIFIER tIN expr tSCALE expr • ';'
   40 expr: expr • '+' expr
   41     | expr • '-' expr
   42     | expr • '*' expr
   43     | expr • '/' expr
   44     | expr • '%' expr
   45     | expr • '<' expr
   46     | expr • '>' expr
   47     | expr • tGE expr
   48     | expr • tLE expr
   49     | expr • tNE expr
   50     | expr • tEQ expr
   51     | expr • tAND expr
   52     | expr • tOR expr

    tOR   shift, and go to state 33
    tAND  shift, and go to state 34
    tEQ   shift, and go to state 35
    tNE   shift, and go to state 36
    tGE   shift, and go to state 37
    tLE   shift, and go to state 38
    '>'   shift, and go to state 39
    '<'   shift, and go to state 40
    '+'   shift, and go to state 41
    '-'   shift, and go to state 42
    '*'   shift, and go to state 43
    '/'   shift, and go to state 44
    '%'   shift, and go to state 45
    ';'   shift, and go to state 122


State 122

   30 instruction: tWITH ptr tAPPLY tIDENTIFIER tIN expr tSCALE expr ';' •

    $default  reduce using rule 30 (instruction)
